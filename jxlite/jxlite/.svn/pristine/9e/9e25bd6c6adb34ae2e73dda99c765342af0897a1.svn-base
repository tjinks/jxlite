package uk.co.cleopatra.xmlmap;

import javax.xml.namespace.QName;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;

import org.w3c.dom.Node;

public abstract class NodeConverterBase implements NodeConverter {
	private final Class<?> objectType;

	private static final ThreadLocal<XPathExpression> CURRENT_NODE = new ThreadLocal<XPathExpression>() {
		@Override
		protected XPathExpression initialValue() {
			XPathFactory xpf = XPathFactory.newInstance();
			XPath xpath = xpf.newXPath();
			try {
				return xpath.compile(".");
			} catch (XPathExpressionException e) {
				throw new XmlMapException(e);
			}
		}
	};
	

	@Override
	public Object convert(Node node) {
		try {
			return doConvert(node);
		} catch (Exception e) {
			throw new XmlMapException(e);
		}
	}
	
	protected Object evaluate(Node node, QName returnType) throws Exception {
		return CURRENT_NODE.get().evaluate(node, returnType);
	}
	
	protected abstract Object doConvert(Node node) throws Exception;

	@Override
	public Class<?> getObjectType() {
		return objectType;
	}

	protected NodeConverterBase(Class<?> objectType) {
		super();
		this.objectType = objectType;
	}

}
